h1. Vagrant project for Developing the Customer Portal 

This is the standard setup for hosting a local development environment on your system.  Once setup it will create a headless instance of Unbuntu provisioned with everything you to run a sandboxed instance of the Customer portal. This document is maintained by Murat Yorukoglu.

h1. Windows Installation

Windows users should install the following programs *in the order they are listed* on their machines:
* Git -  ==<a href='file:////S:/Engineering/vagrant/Git-1.7.9-preview20120201.exe'>Click here</a>== and install with all the recommended defaults. *EXCEPT ON THE SCREEN 'Adjusting Your PATH environment' -- SELECT THE SECOND OPTION 'Run Git from the Windows Command Prompt*
* Virtual Box - ==<a href='file:////S:/Engineering/vagrant/VirtualBox-4.1.8-75467-Win.exe'>Click here</a>== and install with all the recommended defaults. *ALLOW IT TO INSTALL DRIVERS*
* Ruby -  ==<a href='file:////S:/Engineering/vagrant/rubyinstaller-1.9.2-p290.exe'>Click here</a>== and install with all the recommended defaults *AND TICKING THE CHECKBOX 'Add Ruby executables to your PATH'* 

*Ruby DevKit Instructions*

*1. Extract Files*

    Run S:/Engineering/vagrant/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe. Extract the files to C:\DevKit. NOTE: the SFX is really a 7-Zip archive with a bit of embedded magic. If you already have 7-Zip installed, you can simply right-click it and extract itâ€™s contents as you would a normal 7z archive. In the instructions that follow, the directory that you selected is identified as C:\DevKit.

*2. Run Installation Scripts*

* From an admin CMD prompt cd into C:\DevKit.
* Run '_ruby dk.rb init_' to generate the config.yml file to be used later in this Step. Your installed Rubies will be listed there (only those installed by a RubyInstaller package are detected at present).
* Edit the generated config.yml file to include installed Rubies not automagically discovered or remove Rubies you do not want to use the DevKit with.
* [optional] run '_ruby dk.rb review_' to review the list of Rubies to be enhanced to use the DevKit and verify the changes you made to it are correct.
* finally, run '_ruby dk.rb install_' to DevKit enhance your installed Rubies.

*3. Test Installation*

    Confirm your Ruby environment is correctly using the DevKit by running 'gem install rdiscount --platform=ruby'. RDiscount should install correctly and you should see 'Temporarily enhancing PATH to include DevKit...' in the screen messages. Next run 'ruby -rubygems -e "require 'rdiscount'; puts RDiscount.new('Hello RubyInstaller').to_html"' to confirm that the rdiscount gem is working.


h1. Vagrant Installation

At this point you should have Ruby v1.9.2-p290 and Git installed on your system.

* From an admin enabled CMD prompt run =='<i>gem install --no-rdoc --no-ri vagrant<i/>'==.
* Run 'vagrant -v'.  If you get back something like 'Vagrant version 0.9.7' go to the next step, otherwise double check the previous steps and that your ruby bin folder is in your path.
* Run 'vagrant box list' and make sure you see either lucid64 or lucid32 depending on what command you ran.

h1. Get the vagrant_portal repo

* Make the following directory: c:\vagrant (or ~/vagrant).
* From an admin CMD prompt cd into the directory you just created and run '_git clone https://myorukoglu@github.com/myorukoglu/vagrant_portal.git_'.
* If you have a 64bit OS download S:/Engineering/vagrant/lucid64.box to the vagrant otherwise download S:/Engineering/vagrant/lucid32.box to the vagrant.
* If you have a 64bit OS run '_vagrant box add lucid64 lucid64.box_' otherwise run '_vagrant box lucid32 add lucid32.box_'.""
* Make the following directory: c:\vagrant (or ~/vagrant)
* From an admin CMD prompt cd into the directory you just created and run '_git clone https://myorukoglu@github.com/myorukoglu/vagrant_portal.git_'.

h1. Get the Portal repo

* Make the following directory: c:\portal  (or ~/Projects/portal) *PLEASE NOTE THAT THIS IS CASE SENSITIVE*.  If you prefer to put the repo somewhere else make sure you the _config.vm.share_folder_ section of the Vagrantfile.
* From an admin CMD prompt cd into the directory you just created and run '_git clone https://github.com/ovargas27/RolesManagement.git_'

h1. Start Vagrant
From an admin CMD prompt cd to c:\vagrant\vagrant_portal (or ~/vagrant/vagrant_portal) and run 'vagrant up'.
SSH into 